<%- include('includes/sidebar.ejs') %>

<div class="container mx-auto px-4 py-8">
  <div class="flex">
    <h1 class="text-2xl font-bold mb-6">Reporte Financiero ðŸ“Š</h1>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
    <!-- GrÃ¡fico: Deuda Total -->
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-lg font-bold mb-4">Deuda Total ðŸ’°</h3>
      <canvas id="totalDeudaChart" width="400" height="200"></canvas>
    </div>

    <!-- GrÃ¡fico: Pago Total -->
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-lg font-bold mb-4">Pago Total ðŸ’µ</h3>
      <canvas id="totalPagoChart" width="400" height="200"></canvas>
    </div>

    <!-- GrÃ¡fico: Deuda por Concepto -->
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-lg font-bold mb-4">Deuda por Concepto ðŸ“‹</h3>
      <canvas id="deudaConceptoChart" width="400" height="200"></canvas>
    </div>

    <!-- GrÃ¡fico: Pagos por MÃ©todo -->
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-lg font-bold mb-4">Pagos por MÃ©todo ðŸ’³</h3>
      <canvas id="pagosMetodoChart" width="400" height="200"></canvas>
    </div>

    <!-- Materias por Ciclo Escolar -->
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-lg font-bold mb-4">Materias por Ciclo Escolar ðŸ“š</h3>
      <ul>
        <% materiasPorCiclo.forEach((materia) => { %>
          <li><%= materia.Ciclo %> - <%= materia.Nombre_mat %></li>
        <% }) %>
      </ul>
    </div>
  </div>

  <!-- Scripts para Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Deuda Total
    const ctxDeuda = document.getElementById('totalDeudaChart').getContext('2d');
    const totalDeuda = <%= totalDeuda %>;
    new Chart(ctxDeuda, {
      type: 'bar',
      data: {
        labels: ['Total Deuda'],
        datasets: [{
          label: 'Total Deuda',
          data: [totalDeuda],
          backgroundColor: 'rgba(255, 99, 132, 0.2)',
          borderColor: 'rgba(255, 99, 132, 1)',
          borderWidth: 1,
        }],
      },
    });

    // Pago Total
    const ctxPago = document.getElementById('totalPagoChart').getContext('2d');
    const totalPago = <%= totalPago %>;
    new Chart(ctxPago, {
      type: 'bar',
      data: {
        labels: ['Total Pago'],
        datasets: [{
          label: 'Total Pago',
          data: [totalPago],
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1,
        }],
      },
    });

    // Deuda por Concepto
    const ctxDeudaConcepto = document.getElementById('deudaConceptoChart').getContext('2d');
    const deudaConceptos = <%- JSON.stringify(deudaPorConcepto) %>;
    const deudaLabels = deudaConceptos.map(dc => dc.Concepto);
    const deudaValues = deudaConceptos.map(dc => dc.totalDeuda);
    new Chart(ctxDeudaConcepto, {
      type: 'bar',
      data: {
        labels: deudaLabels,
        datasets: [{
          label: 'Deuda por Concepto',
          data: deudaValues,
          backgroundColor: 'rgba(153, 102, 255, 0.2)',
          borderColor: 'rgba(153, 102, 255, 1)',
          borderWidth: 1,
        }],
      },
    });

    // Pagos por MÃ©todo
    const ctxPagosMetodo = document.getElementById('pagosMetodoChart').getContext('2d');
    const pagosMetodos = <%- JSON.stringify(pagosPorMetodo) %>;
    const metodoLabels = pagosMetodos.map(pm => pm.Metodo);
    const metodoValues = pagosMetodos.map(pm => pm.totalPagos);
    new Chart(ctxPagosMetodo, {
      type: 'doughnut',
      data: {
        labels: metodoLabels,
        datasets: [{
          data: metodoValues,
          backgroundColor: [
            'rgba(75, 192, 192, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 206, 86, 0.2)',
          ],
          borderColor: [
            'rgba(75, 192, 192, 1)',
            'rgba(255, 99, 132, 1)',
            'rgba(255, 206, 86, 1)',
          ],
          borderWidth: 1,
        }],
      },
    });
  </script>
</div>
