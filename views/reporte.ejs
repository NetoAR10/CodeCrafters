<!DOCTYPE html>
<html lang="en">
<head>
  <title>Reporte de Finanzas</title>
  
  <link rel="stylesheet" type="text/css" href="/public/style.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <!-- Incluir la barra lateral -->
  <%- include('includes/sidebar.ejs', {
    correo: correo,
    permisos: permisos,
    rol: rol,
    nombre: nombre,
    rolUser: rolUser,
  }) %>

  <!-- Contenedor principal para el contenido -->
  <div class="main-content" style="margin-left: 270px; padding: 20px;">
    <h1>Reporte de Finanzas</h1>

    <!-- Cuadrícula para acomodar las gráficas -->
    <div class="chart-grid" style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 80px; padding: 80px;">
      <!-- Gráfico 1: Total de Deudas y Pagos -->
      <div class="chart-container" style="width: 350px; height: 250px;">
        <h3>Total Anual: Deudas vs. Pagos</h3>
        <canvas id="deudasPagosChart"></canvas>
      </div>

      <!-- Gráfico 2: Deuda por Concepto -->
      <div class="chart-container" style="width: 350px; height: 250px;">
        <h3>Distribución de Deudas por Concepto</h3>
        <canvas id="deudaPorConceptoChart"></canvas>
      </div>

      <!-- Gráfico 3: Pagos por Método -->
      <div class="chart-container" style="width: 350px; height: 250px;">
        <h3>Métodos de Pago Utilizados</h3>
        <canvas id="pagosPorMetodoChart"></canvas>
      </div>

      <!-- Gráfico 5: Pagos por Mes y Método -->
      <div class="chart-container" style="width: 350px; height: 250px;">
        <h3>Tendencias de Pagos Mensuales</h3>
        <canvas id="pagosPorMesYMetodoChart"></canvas>
      </div>
    </div>
  </div>

  <!-- Configuración de Chart.js -->
  <script>
    const totalDeudas = <%= totalDeudas %>;
    const totalPagos = <%= totalPagos %>;
    const totalDeuda = <%= totalDeuda %>;
    const totalPago = <%= totalPago %>;

    const deudaPorConcepto = <%- JSON.stringify(deudaPorConcepto) %>;
    const pagosPorMetodo = <%- JSON.stringify(pagosPorMetodo) %>;
    const pagosPorMesYMetodo = <%- JSON.stringify(pagosPorMesYMetodo) %>;

    function setupTotalDeudasPagos() {
      const ctx1 = document.getElementById('deudasPagosChart').getContext('2d');
      new Chart(ctx1, {
        type: 'bar',
        data: {
          labels: ['Deudas', 'Pagos'],
          datasets: [{
            label: 'Total',
            data: [totalDeuda, totalPago],
            backgroundColor: ['#FF6384', '#36A2EB']
          }]
        },
        options: { scales: { y: { beginAtZero: true } } }
      });
    }

    function setupDeudaPorConcepto() {
      const ctx2 = document.getElementById('deudaPorConceptoChart').getContext('2d');
      const labels = deudaPorConcepto.map(item => item.Concepto);
      const data = deudaPorConcepto.map(item => item.totalDeuda);
      new Chart(ctx2, {
        type: 'bar',
        data: { labels, datasets: [{ label: 'Deuda por Concepto', data, backgroundColor: ['#FFCE56', '#FF6384', '#36A2EB', '#FF9F40'] }] }
      });
    }

    function setupPagosPorMetodo() {
      const ctx3 = document.getElementById('pagosPorMetodoChart').getContext('2d');
      const labels = pagosPorMetodo.map(item => item.Metodo);
      const data = pagosPorMetodo.map(item => item.totalPagos);
      new Chart(ctx3, {
        type: 'bar',
        data: { labels, datasets: [{ label: 'Pagos por Método', data, backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'] }] }
      });
    }

    function setupPagosPorMesYMetodo() {
      const ctx5 = document.getElementById('pagosPorMesYMetodoChart').getContext('2d');
      const meses = [...new Set(pagosPorMesYMetodo.map(dato => dato.Mes))];
      const datasets = ['Efectivo', 'Transferencia', 'Tarjeta de crédito'].map(metodo => ({
        label: metodo,
        data: meses.map(mes => {
          const dato = pagosPorMesYMetodo.find(dato => dato.Mes === mes && dato.Metodo === metodo);
          return dato ? dato.Total : 0;
        }),
        backgroundColor: metodo === 'Efectivo' ? 'rgba(255, 99, 132, 0.2)' : metodo === 'Transferencia' ? 'rgba(54, 162, 235, 0.2)' : 'rgba(255, 206, 86, 0.2)',
        borderColor: metodo === 'Efectivo' ? 'rgba(255, 99, 132, 1)' : metodo === 'Transferencia' ? 'rgba(54, 162, 235, 1)' : 'rgba(255, 206, 86, 1)',
        borderWidth: 1
      }));
      new Chart(ctx5, {
        type: 'bar',
        data: { labels: meses, datasets },
        options: { scales: { y: { beginAtZero: true } } }
      });
    }

    setupTotalDeudasPagos();
    setupDeudaPorConcepto();
    setupPagosPorMetodo();
    setupPagosPorMesYMetodo();
  </script>
</body>
</html>
