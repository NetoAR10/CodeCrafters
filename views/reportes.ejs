<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reportes de Pago</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      font-size: 16px;
    }

    h1 {
      font-family: 'Arial', sans-serif;
      font-size: 24px;
      font-weight: bold;
    }

    canvas {
      max-width: 100%;
      height: auto;
    }

    .chart-container {
      width: 32%;
      margin-bottom: 20px;
    }

    @media screen and (max-width: 768px) {
      .chart-container {
        width: 48%;
      }
    }

    @media screen and (max-width: 480px) {
      .chart-container {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <h1>Reporte de Pagos</h1>
  <div style="width: 80%; margin: auto;">
    <div style="display: flex; flex-wrap: wrap; justify-content: space-between;">
      <div class="chart-container">
        <canvas id="lineChart"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="barChart"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="doughnutChart"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="radarChart"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="polarAreaChart"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="bubbleChart"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="lineChartDeudas"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="barChartDeudas"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="doughnutChartDeudas"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="radarChartDeudas"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="polarAreaChartDeudas"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="bubbleChartDeudas"></canvas>
      </div>
    </div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      try {
        const response = await fetch('/reportes/api/reports');
        if (!response.ok) {
          throw new Error('Network response was not ok: ' + response.statusText);
        }
        const data = await response.json();

        // Configuración del gráfico de líneas
        const lineCtx = document.getElementById('lineChart').getContext('2d');
        const lineChart = new Chart(lineCtx, {
          type: 'line',
          data: {
            labels: data.map(item => item.date),
            datasets: [{
              label: 'Cantidad Recaudada',
              data: data.map(item => item.amount),
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              borderColor: 'rgba(75, 192, 192, 1)',
              borderWidth: 1
            }]
          }
        });

        // Configuración del gráfico de barras
        const barCtx = document.getElementById('barChart').getContext('2d');
        const barChart = new Chart(barCtx, {
          type: 'bar',
          data: {
            labels: data.map(item => item.date),
            datasets: [{
              label: 'Cantidad Pagada',
              data: data.map(item => item.amountPaid),
              backgroundColor: 'rgba(54, 162, 235, 0.2)',
              borderColor: 'rgba(54, 162, 235, 1)',
              borderWidth: 1
            }]
          }
        });

        // Configuración del gráfico de dona
        const doughnutCtx = document.getElementById('doughnutChart').getContext('2d');
        const doughnutChart = new Chart(doughnutCtx, {
          type: 'doughnut',
          data: {
            labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio'],
            datasets: [{
              label: 'Distribución de Pagos',
              data: [300, 50, 100, 200, 150, 250],
              backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
              ],
              borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
              ],
              borderWidth: 1
            }]
          }
        });

        // Configuración del gráfico de radar
        const radarCtx = document.getElementById('radarChart').getContext('2d');
        const radarChart = new Chart(radarCtx, {
          type: 'radar',
          data: {
            labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio'],
            datasets: [{
              label: 'Pago por Mes',
              data: [65, 59, 90, 81, 56, 55],
              backgroundColor: 'rgba(255, 99, 132, 0.2)',
              borderColor: 'rgba(255, 99, 132, 1)',
              pointBackgroundColor: 'rgba(255, 99, 132, 1)',
              pointBorderColor: '#fff',
              pointHoverBackgroundColor: '#fff',
              pointHoverBorderColor: 'rgba(255, 99, 132, 1)'
            }]
          },
          options: {
            elements: {
              line: {
                borderWidth: 3
              }
            }
          }
        });

        // Configuración del gráfico de área polar
        const polarAreaCtx = document.getElementById('polarAreaChart').getContext('2d');
        const polarAreaChart = new Chart(polarAreaCtx, {
          type: 'polarArea',
          data: {
            labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],
            datasets: [{
              data: [11, 16, 7, 3, 14],
              backgroundColor: [
                'rgba(255, 99, 132, 0.5)',
                'rgba(75, 192, 192, 0.5)',
                'rgba(255, 206, 86, 0.5)',
                'rgba(201, 203, 207, 0.5)',
                'rgba(54, 162, 235, 0.5)'
              ]
            }]
          }
        });

        // Configuración del gráfico de burbuja
        const bubbleCtx = document.getElementById('bubbleChart').getContext('2d');
        const bubbleChart = new Chart(bubbleCtx, {
          type: 'bubble',
          data: {
            datasets: [{
              label: 'Primer Conjunto',
              data: [{
                x: 20,
                y: 30,
                r: 15
              }, {
                x: 40,
                y: 10,
                r: 10
              }],
              backgroundColor: 'rgb(255, 99, 132)'
            }]
          },
          options: {
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });

        // Configuración del gráfico de líneas para deudas
        const lineDeudasCtx = document.getElementById('lineChartDeudas').getContext('2d');
        const lineChartDeudas = new Chart(lineDeudasCtx, {
          type: 'line',
          data: {
            labels: data.map(item => item.date),
            datasets: [{
              label: 'Cantidad de Deuda',
              data: data.map(item => item.debt),
              backgroundColor: 'rgba(255, 99, 132, 0.2)',
              borderColor: 'rgba(255, 99, 132, 1)',
              borderWidth: 1
            }]
          }
        });

        // Configuración del gráfico de barras para deudas
        const barDeudasCtx = document.getElementById('barChartDeudas').getContext('2d');
        const barChartDeudas = new Chart(barDeudasCtx, {
          type: 'bar',
          data: {
            labels: data.map(item => item.date),
            datasets: [{
              label: 'Cantidad de Deuda Pagada',
              data: data.map(item => item.debtPaid),
              backgroundColor: 'rgba(54, 162, 235, 0.2)',
              borderColor: 'rgba(54, 162, 235, 1)',
              borderWidth: 1
            }]
          }
        });

        // Configuración del gráfico de dona para deudas
        const doughnutDeudasCtx = document.getElementById('doughnutChartDeudas').getContext('2d');
        const doughnutChartDeudas = new Chart(doughnutDeudasCtx, {
          type: 'doughnut',
          data: {
            labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio'],
            datasets: [{
              label: 'Distribución de Deudas',
              data: [200, 100, 150, 300, 250, 200],
              backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
              ],
              borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
              ],
              borderWidth: 1
            }]
          }
        });

        // Configuración del gráfico de radar para deudas
        const radarDeudasCtx = document.getElementById('radarChartDeudas').getContext('2d');
        const radarChartDeudas = new Chart(radarDeudasCtx, {
          type: 'radar',
          data: {
            labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio'],
            datasets: [{
              label: 'Deuda por Mes',
              data: [35, 49, 80, 71, 46, 45],
              backgroundColor: 'rgba(255, 99, 132, 0.2)',
              borderColor: 'rgba(255, 99, 132, 1)',
              pointBackgroundColor: 'rgba(255, 99, 132, 1)',
              pointBorderColor: '#fff',
              pointHoverBackgroundColor: '#fff',
              pointHoverBorderColor: 'rgba(255, 99, 132, 1)'
            }]
          },
          options: {
            elements: {
              line: {
                borderWidth: 3
              }
            }
          }
        });

        // Configuración del gráfico de área polar para deudas
        const polarAreaDeudasCtx = document.getElementById('polarAreaChartDeudas').getContext('2d');
        const polarAreaChartDeudas = new Chart(polarAreaDeudasCtx, {
          type: 'polarArea',
          data: {
            labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],
            datasets: [{
              data: [8, 12, 6, 4, 10],
              backgroundColor: [
                'rgba(255, 99, 132, 0.5)',
                'rgba(75, 192, 192, 0.5)',
                'rgba(255, 206, 86, 0.5)',
                'rgba(201, 203, 207, 0.5)',
                'rgba(54, 162, 235, 0.5)'
              ]
            }]
          }
        });

        // Configuración del gráfico de burbuja para deudas
        const bubbleDeudasCtx = document.getElementById('bubbleChartDeudas').getContext('2d');
        const bubbleChartDeudas = new Chart(bubbleDeudasCtx, {
          type: 'bubble',
          data: {
            datasets: [{
              label: 'Primer Conjunto',
              data: [{
                x: 20,
                y: 30,
                r: 15
              }, {
                x: 40,
                y: 10,
                r: 10
              }],
              backgroundColor: 'rgb(255, 99, 132)'
            }]
          },
          options: {
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });

      } catch (error) {
        console.error('Failed to fetch data: ', error);
      }
    });
  </script>
</body>
</html>
